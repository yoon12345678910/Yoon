/*

  상수
  -숫자를 읽고, 이해하기 쉽도록 글자로 정의하는 것
  -값에 대해 이름을 부여하는 것
  -값을 암기하기 것 보다 이름을 암기하는 것이 쉽다.
  -문법: 
  final int 상수변수명 = 값;
  보통 상수 변수는 대문자로 이름을  짓는다. 단어 사이는 밑줄(_)로 구분한다.
  
  
  
  
  
  
  
  
final
1) final class 클래스명 {} => 서브클래스를 만들수없다. 이것이 끝이다.
2) final 리턴타입 메소드(....){} = > 서브클래스에서 재정의할수없다.
                                        //오버라이드 불가
3)final 데이터타입 변수명;=> 값을 오로지 한 번만 할당 할 수 있다.
   

*/

package java01.test44;

abstract public class Mover extends Unit {
    //상수 정의 
  //값이 할당되면 바뀌지 않는다.
  //=>인스턴스 마다 개별 관리할 필요가없다.
  //=>이런경우 상수를 클래스 변수로 만들면 된다.
  //=> 상수는 공개한다.
  public static final int NORTH = 0;
  public static final int EAST = 3;
  public static final int WEST = 9;
  public static final int SOUTH = 6;
  
  //여기서 아무리 열심히 코딩해봐야 서브클래스에서 다시 작성해야함
  //왜냐하면 탱크와 벌처와 군인의 움직임 공식이 다르기 때문이다.
  //이렇게 수퍼 클래스에서 기능을 정의할 수 없는 것
  //아니, 기능을 정의하되, 구현할 수 없는 경우!
  //해당 메서드를 추상 메서드로 만들어라;...
  
  
  
  //추상메소드;
  //1)구현하지 말아야 한다.
  //2)서브 클래스에게 구현을 강제하는 효과가있다.
  //3)추상 클래스만이 추상 메소드를 가질 수 있다.
  
  //추상메소드 : 추상클래스가 가질수있는 메소드로서 
  //서브클래스가 꼭 구현해야하는 기능이 있다면 추상메서드로 구현해야한다.
  //서브클래스에서  각각 구현해야한느 메서드라면 서브클래스에서 구현한다.  
  //강제하고 싶은데
  //추상메소드를 사용한다.
  
  
  
  public void move(int direction){
      
      System.out.println("움직인다.");
  }
  
}
