<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- SQL문의 네임스페이스를 설정 -->
<mapper namespace="java02.test20.server.MemberDao">

  <!-- id => SQL문을 찾을 때 사용하는 구분 값
      parameterType => SQL문을 실행할 때 받는 객체
      resultType => 결과 한 개를 저장할 객체
        결과가 여러 개일 경우 ArrayList에 담아서 리턴할 것이다.
        
        결과 데이터의 리턴 방법
        1)Product 객체를 만들어 저장한다
        2)만약 여러개를 리턴한다면 ArrayList에 Product 객체들을 담아서 리턴한다.
        3)Project 객체에 컬럼 값을 담을 때,
        칼럼 이름과 일치하는 setter 메서드를 호출한다.
        만약 일치하는 setter 메서드가 없으면 해당 컬럼의 값을 저장되지 못한다.
        
        
        컬럼 이름과 setter의 이름(프로퍼티이름)이 일치하지 않을 때 해결 방안
        1) 각 컬럼에 별명을 부여하라
        2) resultMap을 정의하라.
        
        프로퍼티란? getter/setter를 말한다. 인스턴스 변수가 아니다.!!!!
        getFirstName() = > firstName (read only property)
        setMakerNo() => makerNo(write only property)
        getUserName()/ setUserName() => userName(read/write property)
        getUsername() =? username (위의 프로퍼티와 다른 것이다.)
        
    
    -->
  <select id="selectList" 
               parameterType="java.util.Map" 
               resultType="java02.test20.server.Member"> <!-- 결과를 담을 객체 -->
   SELECT 
      UID as uid, 
      PWD as pwd,
      EMAIL as email,
      UNAME as uname,
      TEL as tel,
      FAX as fax,
      DET_ADDR as det_addr,
      ANO as ano 
      FROM MEMBERS
      <if test= "pageSize > 0">
        limit #{startIndex}, #{pageSize}
      </if>
  </select>
  
  
  <!--파라미터 값이 문자열, 기본형, 랩퍼클래스 객체라면,
  값을 꺼낼 때 아무 이름이나 지정해도 된다. -->
  <select id = "selectOne"
               parameterType="java.lang.String"
               resultType="java02.test20.server.Member">
   SELECT
   UID as uid, 
      PWD as pwd,
      EMAIL as email,
      UNAME as uname,
      TEL as tel,
      FAX as fax,
      DET_ADDR as det_addr,
      ANO as ano 
      FROM MEMBERS
   WHERE UID = #{uid}
  </select>
  
  <select id = "insert"
               parameterType="java02.test20.server.Member"
               >
  INSERT INTO MEMBERS(UID,PWD,EMAIL,UNAME,TEL,FAX,DET_ADDR,ANO)
   VALUES(#{uid}, #{pwd}, #{email}, #{uname}, #{tel}, #{fax}, #{det_addr}, #{ano} )
  </select>
  
  <update id ="update" parameterType="java02.test20.server.Member" >
      UPDATE MEMBERS SET
        PWD = #{pwd},
        EMAIL = #{email},
        UNAME = #{uname},
        TEL =#{tel},
        FAX = #{fax},
        DET_ADDR = #{det_addr},
        ANO = #{ano} 
   WHERE UID=#{uid}
  
  </update>
  
    <delete id ="delete" parameterType="java02.test20.server.Member" >
      DELETE FROM MEMBERS WHERE UID = #{uid}
  </delete>
  
</mapper>